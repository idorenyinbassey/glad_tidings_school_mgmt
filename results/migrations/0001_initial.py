# Generated by Django 5.2.4 on 2025-07-04 06:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff', '0002_staffprofile_created_at_staffprofile_created_by_and_more'),
        ('students', '0002_studentprofile_created_at_studentprofile_updated_at'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('ca1', 'First CA (Continuous Assessment)'), ('ca2', 'Second CA (Continuous Assessment)'), ('ca3', 'Third CA (Continuous Assessment)'), ('exam', 'Examination'), ('assignment', 'Assignment'), ('project', 'Project'), ('practical', 'Practical')], max_length=20)),
                ('max_score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('weight_percentage', models.FloatField(help_text='Weight in final grade calculation', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 2024/2025', max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='AcademicTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('first', 'First Term'), ('second', 'Second Term'), ('third', 'Third Term')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='results.academicsession')),
            ],
            options={
                'ordering': ['session', 'name'],
                'unique_together': {('session', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text='e.g., MATH101', max_length=10, unique=True)),
                ('department', models.CharField(help_text='e.g., Science, Arts', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Grade 10A, JSS 1B', max_length=50, unique=True)),
                ('level', models.CharField(help_text='e.g., JSS1, SS2', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('class_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_taught', to='staff.staffprofile')),
                ('subjects', models.ManyToManyField(related_name='classes', to='results.subject')),
            ],
            options={
                'verbose_name_plural': 'Student Classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResultSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField(default=0)),
                ('total_possible', models.FloatField(default=0)),
                ('overall_percentage', models.FloatField(default=0)),
                ('overall_grade', models.CharField(blank=True, choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Pass)'), ('F', 'F (Fail)')], max_length=1)),
                ('position_in_class', models.PositiveIntegerField(blank=True, null=True)),
                ('total_students', models.PositiveIntegerField(blank=True, null=True)),
                ('total_days_present', models.PositiveIntegerField(default=0)),
                ('total_days_absent', models.PositiveIntegerField(default=0)),
                ('total_school_days', models.PositiveIntegerField(default=0)),
                ('class_teacher_remarks', models.TextField(blank=True)),
                ('principal_remarks', models.TextField(blank=True)),
                ('is_published', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_results', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicsession')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_sheets', to='students.studentprofile')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicterm')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.studentclass')),
            ],
            options={
                'ordering': ['-session', '-term', '-overall_percentage'],
                'unique_together': {('student', 'session', 'term')},
            },
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('remarks', models.TextField(blank=True)),
                ('entered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.assessment')),
                ('entered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicsession')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='students.studentprofile')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.studentclass')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicterm')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.subject')),
            ],
            options={
                'ordering': ['-session', '-term', 'student__user__last_name', 'subject'],
                'unique_together': {('student', 'subject', 'session', 'term', 'assessment')},
            },
        ),
        migrations.CreateModel(
            name='TermResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField(default=0)),
                ('total_possible', models.FloatField(default=100)),
                ('percentage', models.FloatField(default=0)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Pass)'), ('F', 'F (Fail)')], max_length=1)),
                ('position_in_class', models.PositiveIntegerField(blank=True, null=True)),
                ('total_students', models.PositiveIntegerField(blank=True, null=True)),
                ('teacher_remarks', models.TextField(blank=True)),
                ('compiled_at', models.DateTimeField(auto_now=True)),
                ('compiled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicsession')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_results', to='students.studentprofile')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.studentclass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.academicterm')),
            ],
            options={
                'ordering': ['-session', '-term', '-percentage'],
                'unique_together': {('student', 'subject', 'session', 'term')},
            },
        ),
    ]
